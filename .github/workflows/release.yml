name: Build and Release Scriba

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build Binary
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.19'

    - name: Build
      run: |
        echo "Building for ${{ matrix.goos }}/${{ matrix.goarch }}"
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${{ github.event.repository.name }}-${{ matrix.goos }}-${{ matrix.goarch }} .

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ${{ github.event.repository.name }}-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.name }}
        body: ${{ github.event.release.body }}
        draft: ${{ github.event.release.draft }}
        prerelease: ${{ github.event.release.prerelease }}

    - name: Upload Release Assets (Linux x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ github.event.repository.name }}-linux-amd64
        asset_name: ${{ github.event.repository.name }}-linux-amd64
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload Release Assets (Linux ARM64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ github.event.repository.name }}-linux-arm64
        asset_name: ${{ github.event.repository.name }}-linux-arm64
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload Release Assets (Darwin x64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ github.event.repository.name }}-darwin-amd64
        asset_name: ${{ github.event.repository.name }}-darwin-amd64
        asset_content_type: application/octet-stream
      continue-on-error: true

    - name: Upload Release Assets (Darwin ARM64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/${{ github.event.repository.name }}-darwin-arm64
        asset_name: ${{ github.event.repository.name }}-darwin-arm64
        asset_content_type: application/octet-stream
      continue-on-error: true
